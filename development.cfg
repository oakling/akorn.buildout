[buildout]

parts = 
    django
    django-config
    celery
    rabbitmq
    spider-monkey
    couchdb
    couchdb-lucene
    couchdb-lucene-config
    schedule_scripts
    console_scripts
    nose
    uwsgi
    nginx
    nginx-config
    supervisor
    rubygems
    libevent
    memcached

extends =
    celery.cfg
    couch.cfg
    web.cfg
    base.cfg
    versions.cfg

extensions =
    mr.developer

eggs =
    Django
    BeautifulSoup
    feedparser
    lxml
    couchdb
    celery
    amqplib
    fabric
    pysqlite
    akorn_search
    akorn.celery
    akorn.scrapers
    ipython
    requests<1.2.3
    django_assets
    django-extensions
    python-spidermonkey
    mock
    readline
    cssmin
    cssselect
    pylibmc

auto-checkout =
    akorn_search
    akorn.celery
    akorn.scrapers
    collective.recipe.couchdblucene

show-picked-versions = true
versions = versions

[ports]
http = 8000
uwsgi = 9000

[hosts]
localhost = 127.0.0.1

[libevent]
recipe = hexagonit.recipe.cmmi
url = https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz

[memcached]
recipe = hexagonit.recipe.cmmi
url = https://memcached.googlecode.com/files/memcached-1.4.15.tar.gz
configure-options = --with-libevent=${libevent:location}

[uwsgi]
recipe = buildout.recipe.uwsgi
xml-master = True
xml-processes = 1
xml-socket = ${hosts:localhost}:${ports:uwsgi}
xml-wsgi-file = ${buildout:bin-directory}/django.wsgi

[nginx]
recipe = hexagonit.recipe.cmmi
url = http://nginx.org/download/nginx-1.5.3.tar.gz

[nginx-config]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/nginx/conf/nginx.conf
output = ${nginx:location}/conf/nginx.conf
http_port = ${ports:http}
server_name = localhost
uwsgi_host = ${hosts:localhost}
uwsgi_port = ${ports:uwsgi}
static_dir = ${buildout:directory}/src/akorn_search/akorn_search/collectedstatic/

[django]
recipe = djangorecipe
projectegg = akorn_search
settings = settings
eggs = ${buildout:eggs}
extra-paths = ${buildout:directory}/src
test = akorn_search
wsgi = true

[django-config]
recipe = collective.recipe.template
input = ${buildout:directory}/src/akorn_search/akorn_search/local_settings.default.py
output = ${buildout:directory}/src/akorn_search/akorn_search/local_settings.py

[celery]
recipe = collective.recipe.celery
broker-transport = amqplib
broker-host = 127.0.0.1
broker-vhost = myvhost
broker-user = akorn
broker-password = akorn
eggs = ${buildout:eggs}

[rabbitmq]
recipe = rod.recipe.rabbitmq
url = http://www.rabbitmq.com/releases/rabbitmq-server/v3.0.4/rabbitmq-server-3.0.4.tar.gz

[spider-monkey]
recipe = hexagonit.recipe.cmmi
url = http://ftp.mozilla.org/pub/mozilla.org/js/mozjs17.0.0.tar.gz
md5sum = 20b6f8f1140ef6e47daa3b16965c9202
pre-configure-hook = ${buildout:directory}/change_spidermonkey_dir.py:change_directory

[couchdb]
recipe = buildout_couchdb
url = http://mirror.ox.ac.uk/sites/rsync.apache.org/couchdb/source/1.3.0/apache-couchdb-1.3.0.tar.gz
md5sum = 57a898ac6190d3adcca11cbc577d0381

[couchdb-lucene]
recipe = collective.recipe.couchdblucene
url = https://github.com/rnewson/couchdb-lucene/archive/v0.9.0.tar.gz
ignore-existing = true

[couchdb-lucene-config]
recipe = collective.recipe.template
input = templates/couchdb/local.ini
output = ${couchdb:location}/etc/couchdb/local.ini

[schedule_scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
scripts =
    run_schedule
    run_all_schedule

[console_scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
scripts = ipython

[nose]
recipe = pbp.recipe.noserunner
eggs = 
    ${buildout:eggs}

[supervisor]
recipe = collective.recipe.supervisor
programs =
    ${celery-supervisor:programs}
    ${couch-supervisor:programs}
    ${web-supervisor:programs}

[rubygems]
recipe = rubygemsrecipe
gems = sass
